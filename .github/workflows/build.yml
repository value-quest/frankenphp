name: Build FrankenPHP

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: alpine:edge
      options: --user root
    
    steps:
      - name: Add repositories
        run: |
          echo "https://dl-cdn.alpinelinux.org/alpine/edge/main" > /etc/apk/repositories
          echo "https://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
          echo "https://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories

      - name: Install basic tools
        run: |
          apk update
          apk add --no-cache \
            curl \
            jq \
            git \
            build-base \
            go \
            bash \
            php83 \
            php83-curl \
            php83-openssl \
            php83-phar \
            php83-mbstring \
            php83-tokenizer \
            php83-iconv \
            php83-zip \
            php83-dom \
            php83-xml

      - name: Install Composer
        run: |
          curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          composer --version

      - name: Setup Go environment
        run: |
          echo "GOPATH=/root/go" >> $GITHUB_ENV
          echo "/root/go/bin" >> $GITHUB_PATH
          mkdir -p /root/go/bin

      - name: Get latest FrankenPHP release
        id: frankenphp
        run: |
          LATEST=$(curl -s https://api.github.com/repos/dunglas/frankenphp/releases/latest | jq -r .tag_name)
          echo "version=${LATEST}" >> $GITHUB_OUTPUT

      - name: Checkout FrankenPHP
        uses: actions/checkout@v4
        with:
          repository: dunglas/frankenphp
          ref: ${{ steps.frankenphp.outputs.version }}

      - name: Configure Git
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global --list

      - name: Install build dependencies
        run: |
          apk add --no-cache \
            autoconf \
            automake \
            bison \
            cmake \
            flex \
            gcc \
            g++ \
            libtool \
            make \
            musl-dev \
            re2c \
            file \
            pkgconf \
            linux-headers \
            zlib-dev \
            libxml2-dev \
            openssl-dev \
            curl-dev \
            oniguruma-dev \
            sqlite-dev \
            bzip2-dev \
            freetype-dev \
            libjpeg-turbo-dev \
            libwebp-dev \
            libzip-dev \
            nghttp2-dev \
            brotli-dev \
            gd-dev

      - name: Build FrankenPHP
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          echo "Build directory: $(pwd)"
          echo "Go environment:"
          go env
          echo "Go version:"
          go version
          echo "Running build script..."
          PHP_VERSION=8.3 STATIC=1 bash build-static.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frankenphp-static-php8.3-${{ steps.frankenphp.outputs.version }}
          path: dist/frankenphp

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: static-php8.3-${{ steps.frankenphp.outputs.version }}
          name: FrankenPHP Static ${{ steps.frankenphp.outputs.version }} with PHP 8.3
          files: dist/frankenphp
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
